
version: '3.3'

services:
  db:
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
         - ../backend/.env
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
  web:
    image: ikapustin7/foodgram
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: always
    command: bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      cp api/templates/arial.ttf staticdjango/admin/fonts/ &&
      gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_value:/code/staticdjango/
      - media_value:/code/mediadjango/
    depends_on:
      - db
    env_file:
      - ../backend/.env
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static_value:/var/html/staticdjango/
      - media_value:/var/html/mediadjango/
    depends_on:
      - web
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
volumes:
  postgres_data:
  static_value:
  media_value:
  frontend:
